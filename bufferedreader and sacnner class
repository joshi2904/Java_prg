//Find the difference between bufferedreader and sacnner class.

//bufferedreader
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class BufferedReaderExample {
    public static void main(String[] args) {
        try (BufferedReader br = new BufferedReader(new FileReader("input.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}


//sacnner 
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class ScannerExample {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(new File("input.txt"))) {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                System.out.println(line);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
}



Key Differences
Performance:

BufferedReader is faster and more suitable for reading large amounts of data.
Scanner is slower due to its ability to parse different data types.
Functionality:

BufferedReader is used mainly for reading text line by line.
Scanner is used for parsing and reading various primitive types and strings.
Complexity:

BufferedReader requires additional parsing logic for converting strings to other data types.
Scanner simplifies input parsing with built-in methods.
Buffering:

BufferedReader uses a buffer to read data efficiently.
Scanner does not use a buffer in the same way and is focused on parsing.
In summary, choose BufferedReader when you need to read large files efficiently and Scanner when you need to parse and handle different data types from input
